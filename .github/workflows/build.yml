name: Build and Release

on:
  push:
    tags: ['v*']
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci && cd ..
    
    - name: Build frontend
      run: npm run build:frontend
    
    - name: Test build
      run: npm run build:linux

  build-mac:
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci && cd ..
    
    - name: Build frontend
      run: npm run build:frontend
    
    - name: Build macOS app
      run: npm run build:mac
    
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-app
        path: dist/*.dmg
        retention-days: 30

  build-win:
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci && cd ..
    
    - name: Build frontend
      run: npm run build:frontend
    
    - name: Build Windows app
      run: npm run build:win
    
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-app
        path: dist/*.exe
        retention-days: 30

  build-linux:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci && cd ..
    
    - name: Build frontend
      run: npm run build:frontend
    
    - name: Build Linux app
      run: npm run build:linux
    
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-app
        path: dist/*.AppImage
        retention-days: 30

  release:
    runs-on: ubuntu-latest
    needs: [build-mac, build-win, build-linux]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          macos-app/*.dmg
          windows-app/*.exe
          linux-app/*.AppImage
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 